1. for â€“ LaÃ§o de repetiÃ§Ã£o
 O que Ã©:
O for serve para repetir um bloco de cÃ³digo para cada item de uma lista, string, ou intervalo de nÃºmeros.

ğŸ’¡ Exemplo:
Python
numeros = [10, 20, 30]
for n in numeros:  # faÃ§a algo com o item
    print(n)
SaÃ­da:
10
20
30


VocÃª tambÃ©m pode somar com for:
Python
soma = 0
for n in numeros:
    soma += n
print(soma)  # 60



2. sorted() â€“ Ordena listas (sem alterar a original)

O que Ã©:
A funÃ§Ã£o sorted() cria uma nova lista ordenada (em ordem crescente por padrÃ£o), sem modificar a lista original.

ğŸ’¡ Exemplo:
python
lista = [3, 1, 5, 2]
nova_lista = sorted(lista)

print(nova_lista)  # [1, 2, 3, 5]
print(lista)       # [3, 1, 5, 2] â†’ original permanece igual
VocÃª pode usar sorted(lista, reverse=True) para ordem decrescente.


3. len() â€“ Tamanho da lista
 O que Ã©:
A funÃ§Ã£o len() retorna a quantidade de elementos em uma lista, string ou outro tipo de sequÃªncia.

ğŸ’¡ Exemplo:
python
lista = [10, 20, 30, 40]
tamanho = len(lista)
print(tamanho)  # 4



4.PosiÃ§Ãµes em listas
 O que Ã©:
Cada elemento em uma lista tem uma posiÃ§Ã£o, chamada de Ã­ndice.
No Python, os Ã­ndices comeÃ§am em 0.

ğŸ’¡ Exemplo:
python
lista = ['a', 'b', 'c', 'd']

print(lista[0])  # 'a' (primeiro elemento)
print(lista[1])  # 'b'
print(lista[-1]) # 'd' (Ãºltimo elemento, usando Ã­ndice negativo)


VocÃª tambÃ©m pode usar o Ã­ndice para pegar o elemento do meio:

ğŸ’¡ Exemplo:
python
Meio = lista[len(lista) // 2]
